name: validate
on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - '*'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  unity-build:
    env:
      UNITY_PROJECT_PATH: '' # set by unity-setup action
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-13]
        unity-versions: [2021.x, 2022.x, 6000.x]
        build-target:
          - iOS
          - StandaloneOSX
    steps:
      - uses: actions/checkout@v4
      - uses: actions/checkout@v4
        with:
          repository: RageAgainstThePixel/com.utilities.encoder.wav
          path: 'com.utilities.encoder.wav'
          ref: test
      - uses: RageAgainstThePixel/unity-setup@v1
        with:
          unity-version: ${{ matrix.unity-versions }}
          build-targets: ${{ matrix.build-target }}
          version-file: '${{ github.workspace }}/com.utilities.encoder.wav/Utilities.Encoder.Wav/ProjectSettings/ProjectVersion.txt'
      - uses: RageAgainstThePixel/activate-unity-license@v1
        with:
          license: 'Personal'
          username: ${{ secrets.UNITY_USERNAME }}
          password: ${{ secrets.UNITY_PASSWORD }}
      - uses: RageAgainstThePixel/unity-action@v1
        name: '${{ matrix.build-target }}-Validate'
        with:
          log-name: '${{ matrix.build-target }}-Validate'
          args: '-quit -nographics -batchmode -executeMethod Utilities.Editor.BuildPipeline.UnityPlayerBuildTools.ValidateProject -importTMProEssentialsAsset'
      - uses: RageAgainstThePixel/unity-action@v1
        name: '${{ matrix.build-target }}-Test'
        with:
          log-name: '${{ matrix.build-target }}-Test'
          build-target: ${{ matrix.build-target }}
          args: '-nographics -batchmode -runTests -testPlatform EditMode -testResults "${{ github.workspace }}/Logs/${{ matrix.build-target }}-results.xml"'
      - uses: RageAgainstThePixel/unity-action@v1
        name: '${{ matrix.build-target }}-Build'
        with:
          log-name: '${{ matrix.build-target }}-Build'
          args: '-quit -nographics -batchmode -executeMethod Utilities.Editor.BuildPipeline.UnityPlayerBuildTools.StartCommandLineBuild -export -enableAppleAutomaticSigning -bundleIdentifier com.rageagainstthepixel.utilities.encoder.wav'

      - uses: ./ # RageAgainstThePixel/unity-xcode-builder
        id: xcode-build
        with:
          project-path: ${{ env.UNITY_PROJECT_PATH }}/Builds/${{ matrix.build-target }}/**/*.xcodeproj
          app-store-connect-key: ${{ secrets.APP_STORE_CONNECT_KEY }}
          app-store-connect-key-id: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
          app-store-connect-issuer-id: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          team-id: ${{ secrets.APPLE_TEAM_ID }}
          export-option: ad-hoc

      - name: print outputs
        run: |
          echo "Archive: ${{ steps.xcode-build.outputs.archive }}"
          echo "Export path: ${{ steps.xcode-build.outputs.export-path }}"
          ls -al ${{ steps.xcode-build.outputs.export-path }}
